#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BSData.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BS")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblUsers_Dep(tblUsers_Dep instance);
    partial void UpdatetblUsers_Dep(tblUsers_Dep instance);
    partial void DeletetblUsers_Dep(tblUsers_Dep instance);
    partial void InserttblUsers_InRole(tblUsers_InRole instance);
    partial void UpdatetblUsers_InRole(tblUsers_InRole instance);
    partial void DeletetblUsers_InRole(tblUsers_InRole instance);
    partial void InserttblUsers_Status(tblUsers_Status instance);
    partial void UpdatetblUsers_Status(tblUsers_Status instance);
    partial void DeletetblUsers_Status(tblUsers_Status instance);
    partial void InserttblUsers_SubDep(tblUsers_SubDep instance);
    partial void UpdatetblUsers_SubDep(tblUsers_SubDep instance);
    partial void DeletetblUsers_SubDep(tblUsers_SubDep instance);
    partial void InserttblUsersActivities_EditedCol(tblUsersActivities_EditedCol instance);
    partial void UpdatetblUsersActivities_EditedCol(tblUsersActivities_EditedCol instance);
    partial void DeletetblUsersActivities_EditedCol(tblUsersActivities_EditedCol instance);
    partial void InserttblUsersActivities_Update(tblUsersActivities_Update instance);
    partial void UpdatetblUsersActivities_Update(tblUsersActivities_Update instance);
    partial void DeletetblUsersActivities_Update(tblUsersActivities_Update instance);
    partial void InserttblUsers_Role(tblUsers_Role instance);
    partial void UpdatetblUsers_Role(tblUsers_Role instance);
    partial void DeletetblUsers_Role(tblUsers_Role instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblAction_MenuGroup(tblAction_MenuGroup instance);
    partial void UpdatetblAction_MenuGroup(tblAction_MenuGroup instance);
    partial void DeletetblAction_MenuGroup(tblAction_MenuGroup instance);
    partial void InserttblAction_Menu(tblAction_Menu instance);
    partial void UpdatetblAction_Menu(tblAction_Menu instance);
    partial void DeletetblAction_Menu(tblAction_Menu instance);
    partial void InserttblAction_Control(tblAction_Control instance);
    partial void UpdatetblAction_Control(tblAction_Control instance);
    partial void DeletetblAction_Control(tblAction_Control instance);
    partial void InserttblAction_Tab(tblAction_Tab instance);
    partial void UpdatetblAction_Tab(tblAction_Tab instance);
    partial void DeletetblAction_Tab(tblAction_Tab instance);
    partial void InserttblObjects_ID(tblObjects_ID instance);
    partial void UpdatetblObjects_ID(tblObjects_ID instance);
    partial void DeletetblObjects_ID(tblObjects_ID instance);
    partial void InserttblTown(tblTown instance);
    partial void UpdatetblTown(tblTown instance);
    partial void DeletetblTown(tblTown instance);
    partial void InserttblClient(tblClient instance);
    partial void UpdatetblClient(tblClient instance);
    partial void DeletetblClient(tblClient instance);
    partial void InserttblContracts_Form(tblContracts_Form instance);
    partial void UpdatetblContracts_Form(tblContracts_Form instance);
    partial void DeletetblContracts_Form(tblContracts_Form instance);
    partial void InserttblContract(tblContract instance);
    partial void UpdatetblContract(tblContract instance);
    partial void DeletetblContract(tblContract instance);
    partial void InserttblDocs_UploadedFile(tblDocs_UploadedFile instance);
    partial void UpdatetblDocs_UploadedFile(tblDocs_UploadedFile instance);
    partial void DeletetblDocs_UploadedFile(tblDocs_UploadedFile instance);
    #endregion
		
		public dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblUsers_Dep> tblUsers_Deps
		{
			get
			{
				return this.GetTable<tblUsers_Dep>();
			}
		}
		
		public System.Data.Linq.Table<tblUsers_InRole> tblUsers_InRoles
		{
			get
			{
				return this.GetTable<tblUsers_InRole>();
			}
		}
		
		public System.Data.Linq.Table<tblUsers_Status> tblUsers_Status
		{
			get
			{
				return this.GetTable<tblUsers_Status>();
			}
		}
		
		public System.Data.Linq.Table<tblUsers_SubDep> tblUsers_SubDeps
		{
			get
			{
				return this.GetTable<tblUsers_SubDep>();
			}
		}
		
		public System.Data.Linq.Table<tblUsersActivities_EditedCol> tblUsersActivities_EditedCols
		{
			get
			{
				return this.GetTable<tblUsersActivities_EditedCol>();
			}
		}
		
		public System.Data.Linq.Table<tblUsersActivities_Update> tblUsersActivities_Updates
		{
			get
			{
				return this.GetTable<tblUsersActivities_Update>();
			}
		}
		
		public System.Data.Linq.Table<tblUsers_Role> tblUsers_Roles
		{
			get
			{
				return this.GetTable<tblUsers_Role>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblAction_MenuGroup> tblAction_MenuGroups
		{
			get
			{
				return this.GetTable<tblAction_MenuGroup>();
			}
		}
		
		public System.Data.Linq.Table<tblAction_Menu> tblAction_Menus
		{
			get
			{
				return this.GetTable<tblAction_Menu>();
			}
		}
		
		public System.Data.Linq.Table<tblAction_Control> tblAction_Controls
		{
			get
			{
				return this.GetTable<tblAction_Control>();
			}
		}
		
		public System.Data.Linq.Table<tblAction_Tab> tblAction_Tabs
		{
			get
			{
				return this.GetTable<tblAction_Tab>();
			}
		}
		
		public System.Data.Linq.Table<tblObjects_ID> tblObjects_IDs
		{
			get
			{
				return this.GetTable<tblObjects_ID>();
			}
		}
		
		public System.Data.Linq.Table<tblTown> tblTowns
		{
			get
			{
				return this.GetTable<tblTown>();
			}
		}
		
		public System.Data.Linq.Table<tblClient> tblClients
		{
			get
			{
				return this.GetTable<tblClient>();
			}
		}
		
		public System.Data.Linq.Table<tblContracts_Form> tblContracts_Forms
		{
			get
			{
				return this.GetTable<tblContracts_Form>();
			}
		}
		
		public System.Data.Linq.Table<tblContract> tblContracts
		{
			get
			{
				return this.GetTable<tblContract>();
			}
		}
		
		public System.Data.Linq.Table<tblDocs_UploadedFile> tblDocs_UploadedFiles
		{
			get
			{
				return this.GetTable<tblDocs_UploadedFile>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_tblUsers_InsertNew")]
		public int proc_tblUsers_InsertNew([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Position", DbType="NVarChar(50)")] string position, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(35)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(35)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Birthday", DbType="Date")] System.Nullable<System.DateTime> birthday, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Work_from", DbType="Date")] System.Nullable<System.DateTime> work_from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubDepID", DbType="Int")] System.Nullable<int> subDepID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone_mob", DbType="Int")] System.Nullable<int> phone_mob, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone_work", DbType="Int")] System.Nullable<int> phone_work, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(250)")] string address)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, position, name, lastName, birthday, work_from, subDepID, phone_mob, phone_work, email, address);
			iD = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_GetContracts")]
		public ISingleResult<proc_GetContractsResult> proc_GetContracts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsValid", DbType="Bit")] System.Nullable<bool> isValid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSigned", DbType="Bit")] System.Nullable<bool> isSigned)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isValid, isSigned);
			return ((ISingleResult<proc_GetContractsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_GetTblDocs")]
		public ISingleResult<proc_GetTblDocsResult> proc_GetTblDocs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TableName", DbType="VarChar(50)")] string tableName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName);
			return ((ISingleResult<proc_GetTblDocsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers_Dep")]
	public partial class tblUsers_Dep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<tblUsers_SubDep> _tblUsers_SubDeps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblUsers_Dep()
		{
			this._tblUsers_SubDeps = new EntitySet<tblUsers_SubDep>(new Action<tblUsers_SubDep>(this.attach_tblUsers_SubDeps), new Action<tblUsers_SubDep>(this.detach_tblUsers_SubDeps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_Dep_tblUsers_SubDep", Storage="_tblUsers_SubDeps", ThisKey="ID", OtherKey="DepID")]
		public EntitySet<tblUsers_SubDep> tblUsers_SubDeps
		{
			get
			{
				return this._tblUsers_SubDeps;
			}
			set
			{
				this._tblUsers_SubDeps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsers_SubDeps(tblUsers_SubDep entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_Dep = this;
		}
		
		private void detach_tblUsers_SubDeps(tblUsers_SubDep entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_Dep = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers_InRoles")]
	public partial class tblUsers_InRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _RoleID;
		
		private EntityRef<tblUsers_Role> _tblUsers_Role;
		
		private EntityRef<tblUser> _tblUser;
		
		private EntityRef<tblAction_MenuGroup> _tblAction_MenuGroup;
		
		private EntityRef<tblAction_Tab> _tblAction_Tab;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public tblUsers_InRole()
		{
			this._tblUsers_Role = default(EntityRef<tblUsers_Role>);
			this._tblUser = default(EntityRef<tblUser>);
			this._tblAction_MenuGroup = default(EntityRef<tblAction_MenuGroup>);
			this._tblAction_Tab = default(EntityRef<tblAction_Tab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (((this._tblUsers_Role.HasLoadedOrAssignedValue || this._tblAction_MenuGroup.HasLoadedOrAssignedValue) 
								|| this._tblAction_Tab.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_Role_tblUsers_InRole", Storage="_tblUsers_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public tblUsers_Role tblUsers_Role
		{
			get
			{
				return this._tblUsers_Role.Entity;
			}
			set
			{
				tblUsers_Role previousValue = this._tblUsers_Role.Entity;
				if (((previousValue != value) 
							|| (this._tblUsers_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUsers_Role.Entity = null;
						previousValue.tblUsers_InRoles.Remove(this);
					}
					this._tblUsers_Role.Entity = value;
					if ((value != null))
					{
						value.tblUsers_InRoles.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("tblUsers_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblUsers_InRole", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblUsers_InRoles.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblUsers_InRoles.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAction_MenuGroup_tblUsers_InRole", Storage="_tblAction_MenuGroup", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public tblAction_MenuGroup tblAction_MenuGroup
		{
			get
			{
				return this._tblAction_MenuGroup.Entity;
			}
			set
			{
				tblAction_MenuGroup previousValue = this._tblAction_MenuGroup.Entity;
				if (((previousValue != value) 
							|| (this._tblAction_MenuGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAction_MenuGroup.Entity = null;
						previousValue.tblUsers_InRoles.Remove(this);
					}
					this._tblAction_MenuGroup.Entity = value;
					if ((value != null))
					{
						value.tblUsers_InRoles.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("tblAction_MenuGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAction_Tab_tblUsers_InRole", Storage="_tblAction_Tab", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public tblAction_Tab tblAction_Tab
		{
			get
			{
				return this._tblAction_Tab.Entity;
			}
			set
			{
				tblAction_Tab previousValue = this._tblAction_Tab.Entity;
				if (((previousValue != value) 
							|| (this._tblAction_Tab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAction_Tab.Entity = null;
						previousValue.tblUsers_InRoles.Remove(this);
					}
					this._tblAction_Tab.Entity = value;
					if ((value != null))
					{
						value.tblUsers_InRoles.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("tblAction_Tab");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers_Status")]
	public partial class tblUsers_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<tblUser> _tblUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblUsers_Status()
		{
			this._tblUsers = new EntitySet<tblUser>(new Action<tblUser>(this.attach_tblUsers), new Action<tblUser>(this.detach_tblUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_Status_tblUser", Storage="_tblUsers", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<tblUser> tblUsers
		{
			get
			{
				return this._tblUsers;
			}
			set
			{
				this._tblUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_Status = this;
		}
		
		private void detach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers_SubDep")]
	public partial class tblUsers_SubDep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _DepID;
		
		private EntitySet<tblUser> _tblUsers;
		
		private EntitySet<tblContract> _tblContracts;
		
		private EntityRef<tblUsers_Dep> _tblUsers_Dep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDepIDChanging(int value);
    partial void OnDepIDChanged();
    #endregion
		
		public tblUsers_SubDep()
		{
			this._tblUsers = new EntitySet<tblUser>(new Action<tblUser>(this.attach_tblUsers), new Action<tblUser>(this.detach_tblUsers));
			this._tblContracts = new EntitySet<tblContract>(new Action<tblContract>(this.attach_tblContracts), new Action<tblContract>(this.detach_tblContracts));
			this._tblUsers_Dep = default(EntityRef<tblUsers_Dep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepID", DbType="Int NOT NULL")]
		public int DepID
		{
			get
			{
				return this._DepID;
			}
			set
			{
				if ((this._DepID != value))
				{
					if (this._tblUsers_Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepIDChanging(value);
					this.SendPropertyChanging();
					this._DepID = value;
					this.SendPropertyChanged("DepID");
					this.OnDepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_SubDep_tblUser", Storage="_tblUsers", ThisKey="ID", OtherKey="SubDepID")]
		public EntitySet<tblUser> tblUsers
		{
			get
			{
				return this._tblUsers;
			}
			set
			{
				this._tblUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_SubDep_tblContract", Storage="_tblContracts", ThisKey="ID", OtherKey="SubDepID")]
		public EntitySet<tblContract> tblContracts
		{
			get
			{
				return this._tblContracts;
			}
			set
			{
				this._tblContracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_Dep_tblUsers_SubDep", Storage="_tblUsers_Dep", ThisKey="DepID", OtherKey="ID", IsForeignKey=true)]
		public tblUsers_Dep tblUsers_Dep
		{
			get
			{
				return this._tblUsers_Dep.Entity;
			}
			set
			{
				tblUsers_Dep previousValue = this._tblUsers_Dep.Entity;
				if (((previousValue != value) 
							|| (this._tblUsers_Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUsers_Dep.Entity = null;
						previousValue.tblUsers_SubDeps.Remove(this);
					}
					this._tblUsers_Dep.Entity = value;
					if ((value != null))
					{
						value.tblUsers_SubDeps.Add(this);
						this._DepID = value.ID;
					}
					else
					{
						this._DepID = default(int);
					}
					this.SendPropertyChanged("tblUsers_Dep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_SubDep = this;
		}
		
		private void detach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_SubDep = null;
		}
		
		private void attach_tblContracts(tblContract entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_SubDep = this;
		}
		
		private void detach_tblContracts(tblContract entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_SubDep = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsersActivities_EditedCols")]
	public partial class tblUsersActivities_EditedCol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UpdateID;
		
		private string _OldVal;
		
		private string _FieldName;
		
		private EntityRef<tblUsersActivities_Update> _tblUsersActivities_Update;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUpdateIDChanging(int value);
    partial void OnUpdateIDChanged();
    partial void OnOldValChanging(string value);
    partial void OnOldValChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    #endregion
		
		public tblUsersActivities_EditedCol()
		{
			this._tblUsersActivities_Update = default(EntityRef<tblUsersActivities_Update>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateID", DbType="Int NOT NULL")]
		public int UpdateID
		{
			get
			{
				return this._UpdateID;
			}
			set
			{
				if ((this._UpdateID != value))
				{
					if (this._tblUsersActivities_Update.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateIDChanging(value);
					this.SendPropertyChanging();
					this._UpdateID = value;
					this.SendPropertyChanged("UpdateID");
					this.OnUpdateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldVal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string OldVal
		{
			get
			{
				return this._OldVal;
			}
			set
			{
				if ((this._OldVal != value))
				{
					this.OnOldValChanging(value);
					this.SendPropertyChanging();
					this._OldVal = value;
					this.SendPropertyChanged("OldVal");
					this.OnOldValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsersActivities_Update_tblUsersActivities_EditedCol", Storage="_tblUsersActivities_Update", ThisKey="UpdateID", OtherKey="ID", IsForeignKey=true)]
		public tblUsersActivities_Update tblUsersActivities_Update
		{
			get
			{
				return this._tblUsersActivities_Update.Entity;
			}
			set
			{
				tblUsersActivities_Update previousValue = this._tblUsersActivities_Update.Entity;
				if (((previousValue != value) 
							|| (this._tblUsersActivities_Update.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUsersActivities_Update.Entity = null;
						previousValue.tblUsersActivities_EditedCols.Remove(this);
					}
					this._tblUsersActivities_Update.Entity = value;
					if ((value != null))
					{
						value.tblUsersActivities_EditedCols.Add(this);
						this._UpdateID = value.ID;
					}
					else
					{
						this._UpdateID = default(int);
					}
					this.SendPropertyChanged("tblUsersActivities_Update");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsersActivities_Updates")]
	public partial class tblUsersActivities_Update : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RecordID;
		
		private int _TableID;
		
		private int _UserID;
		
		private System.DateTime _Date;
		
		private byte _Action;
		
		private EntitySet<tblUsersActivities_EditedCol> _tblUsersActivities_EditedCols;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRecordIDChanging(int value);
    partial void OnRecordIDChanged();
    partial void OnTableIDChanging(int value);
    partial void OnTableIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnActionChanging(byte value);
    partial void OnActionChanged();
    #endregion
		
		public tblUsersActivities_Update()
		{
			this._tblUsersActivities_EditedCols = new EntitySet<tblUsersActivities_EditedCol>(new Action<tblUsersActivities_EditedCol>(this.attach_tblUsersActivities_EditedCols), new Action<tblUsersActivities_EditedCol>(this.detach_tblUsersActivities_EditedCols));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="Int NOT NULL")]
		public int RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableID", DbType="Int NOT NULL")]
		public int TableID
		{
			get
			{
				return this._TableID;
			}
			set
			{
				if ((this._TableID != value))
				{
					this.OnTableIDChanging(value);
					this.SendPropertyChanging();
					this._TableID = value;
					this.SendPropertyChanged("TableID");
					this.OnTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="TinyInt NOT NULL")]
		public byte Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsersActivities_Update_tblUsersActivities_EditedCol", Storage="_tblUsersActivities_EditedCols", ThisKey="ID", OtherKey="UpdateID")]
		public EntitySet<tblUsersActivities_EditedCol> tblUsersActivities_EditedCols
		{
			get
			{
				return this._tblUsersActivities_EditedCols;
			}
			set
			{
				this._tblUsersActivities_EditedCols.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsersActivities_EditedCols(tblUsersActivities_EditedCol entity)
		{
			this.SendPropertyChanging();
			entity.tblUsersActivities_Update = this;
		}
		
		private void detach_tblUsersActivities_EditedCols(tblUsersActivities_EditedCol entity)
		{
			this.SendPropertyChanging();
			entity.tblUsersActivities_Update = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers_Roles")]
	public partial class tblUsers_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<tblUsers_InRole> _tblUsers_InRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblUsers_Role()
		{
			this._tblUsers_InRoles = new EntitySet<tblUsers_InRole>(new Action<tblUsers_InRole>(this.attach_tblUsers_InRoles), new Action<tblUsers_InRole>(this.detach_tblUsers_InRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_Role_tblUsers_InRole", Storage="_tblUsers_InRoles", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<tblUsers_InRole> tblUsers_InRoles
		{
			get
			{
				return this._tblUsers_InRoles;
			}
			set
			{
				this._tblUsers_InRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsers_InRoles(tblUsers_InRole entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_Role = this;
		}
		
		private void detach_tblUsers_InRoles(tblUsers_InRole entity)
		{
			this.SendPropertyChanging();
			entity.tblUsers_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _StatusID;
		
		private string _Position;
		
		private string _Name;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private System.DateTime _Work_from;
		
		private int _SubDepID;
		
		private System.Nullable<int> _Phone_mob;
		
		private System.Nullable<int> _Phone_work;
		
		private string _Email;
		
		private string _Address;
		
		private string _Telefonai;
		
		private System.Nullable<int> _OrderNo;
		
		private EntitySet<tblUsers_InRole> _tblUsers_InRoles;
		
		private EntitySet<tblContract> _tblContracts;
		
		private EntitySet<tblDocs_UploadedFile> _tblDocs_UploadedFiles;
		
		private EntityRef<tblUsers_Status> _tblUsers_Status;
		
		private EntityRef<tblUsers_SubDep> _tblUsers_SubDep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnWork_fromChanging(System.DateTime value);
    partial void OnWork_fromChanged();
    partial void OnSubDepIDChanging(int value);
    partial void OnSubDepIDChanged();
    partial void OnPhone_mobChanging(System.Nullable<int> value);
    partial void OnPhone_mobChanged();
    partial void OnPhone_workChanging(System.Nullable<int> value);
    partial void OnPhone_workChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelefonaiChanging(string value);
    partial void OnTelefonaiChanged();
    partial void OnOrderNoChanging(System.Nullable<int> value);
    partial void OnOrderNoChanged();
    #endregion
		
		public tblUser()
		{
			this._tblUsers_InRoles = new EntitySet<tblUsers_InRole>(new Action<tblUsers_InRole>(this.attach_tblUsers_InRoles), new Action<tblUsers_InRole>(this.detach_tblUsers_InRoles));
			this._tblContracts = new EntitySet<tblContract>(new Action<tblContract>(this.attach_tblContracts), new Action<tblContract>(this.detach_tblContracts));
			this._tblDocs_UploadedFiles = new EntitySet<tblDocs_UploadedFile>(new Action<tblDocs_UploadedFile>(this.attach_tblDocs_UploadedFiles), new Action<tblDocs_UploadedFile>(this.detach_tblDocs_UploadedFiles));
			this._tblUsers_Status = default(EntityRef<tblUsers_Status>);
			this._tblUsers_SubDep = default(EntityRef<tblUsers_SubDep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._tblUsers_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Work_from", DbType="Date NOT NULL")]
		public System.DateTime Work_from
		{
			get
			{
				return this._Work_from;
			}
			set
			{
				if ((this._Work_from != value))
				{
					this.OnWork_fromChanging(value);
					this.SendPropertyChanging();
					this._Work_from = value;
					this.SendPropertyChanged("Work_from");
					this.OnWork_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepID", DbType="Int NOT NULL")]
		public int SubDepID
		{
			get
			{
				return this._SubDepID;
			}
			set
			{
				if ((this._SubDepID != value))
				{
					if (this._tblUsers_SubDep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubDepIDChanging(value);
					this.SendPropertyChanging();
					this._SubDepID = value;
					this.SendPropertyChanged("SubDepID");
					this.OnSubDepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_mob", DbType="Int")]
		public System.Nullable<int> Phone_mob
		{
			get
			{
				return this._Phone_mob;
			}
			set
			{
				if ((this._Phone_mob != value))
				{
					this.OnPhone_mobChanging(value);
					this.SendPropertyChanging();
					this._Phone_mob = value;
					this.SendPropertyChanged("Phone_mob");
					this.OnPhone_mobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_work", DbType="Int")]
		public System.Nullable<int> Phone_work
		{
			get
			{
				return this._Phone_work;
			}
			set
			{
				if ((this._Phone_work != value))
				{
					this.OnPhone_workChanging(value);
					this.SendPropertyChanging();
					this._Phone_work = value;
					this.SendPropertyChanged("Phone_work");
					this.OnPhone_workChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefonai", DbType="NVarChar(150)")]
		public string Telefonai
		{
			get
			{
				return this._Telefonai;
			}
			set
			{
				if ((this._Telefonai != value))
				{
					this.OnTelefonaiChanging(value);
					this.SendPropertyChanging();
					this._Telefonai = value;
					this.SendPropertyChanged("Telefonai");
					this.OnTelefonaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int")]
		public System.Nullable<int> OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblUsers_InRole", Storage="_tblUsers_InRoles", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblUsers_InRole> tblUsers_InRoles
		{
			get
			{
				return this._tblUsers_InRoles;
			}
			set
			{
				this._tblUsers_InRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblContract", Storage="_tblContracts", ThisKey="ID", OtherKey="RespUserID")]
		public EntitySet<tblContract> tblContracts
		{
			get
			{
				return this._tblContracts;
			}
			set
			{
				this._tblContracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblDocs_UploadedFile", Storage="_tblDocs_UploadedFiles", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblDocs_UploadedFile> tblDocs_UploadedFiles
		{
			get
			{
				return this._tblDocs_UploadedFiles;
			}
			set
			{
				this._tblDocs_UploadedFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_Status_tblUser", Storage="_tblUsers_Status", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public tblUsers_Status tblUsers_Status
		{
			get
			{
				return this._tblUsers_Status.Entity;
			}
			set
			{
				tblUsers_Status previousValue = this._tblUsers_Status.Entity;
				if (((previousValue != value) 
							|| (this._tblUsers_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUsers_Status.Entity = null;
						previousValue.tblUsers.Remove(this);
					}
					this._tblUsers_Status.Entity = value;
					if ((value != null))
					{
						value.tblUsers.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("tblUsers_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_SubDep_tblUser", Storage="_tblUsers_SubDep", ThisKey="SubDepID", OtherKey="ID", IsForeignKey=true)]
		public tblUsers_SubDep tblUsers_SubDep
		{
			get
			{
				return this._tblUsers_SubDep.Entity;
			}
			set
			{
				tblUsers_SubDep previousValue = this._tblUsers_SubDep.Entity;
				if (((previousValue != value) 
							|| (this._tblUsers_SubDep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUsers_SubDep.Entity = null;
						previousValue.tblUsers.Remove(this);
					}
					this._tblUsers_SubDep.Entity = value;
					if ((value != null))
					{
						value.tblUsers.Add(this);
						this._SubDepID = value.ID;
					}
					else
					{
						this._SubDepID = default(int);
					}
					this.SendPropertyChanged("tblUsers_SubDep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsers_InRoles(tblUsers_InRole entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblUsers_InRoles(tblUsers_InRole entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblContracts(tblContract entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblContracts(tblContract entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblDocs_UploadedFiles(tblDocs_UploadedFile entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblDocs_UploadedFiles(tblDocs_UploadedFile entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAction_MenuGroup")]
	public partial class tblAction_MenuGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _RoleID;
		
		private int _TabID;
		
		private int _OrderNo;
		
		private EntitySet<tblUsers_InRole> _tblUsers_InRoles;
		
		private EntitySet<tblAction_Menu> _tblAction_Menus;
		
		private EntityRef<tblAction_Tab> _tblAction_Tab;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    #endregion
		
		public tblAction_MenuGroup()
		{
			this._tblUsers_InRoles = new EntitySet<tblUsers_InRole>(new Action<tblUsers_InRole>(this.attach_tblUsers_InRoles), new Action<tblUsers_InRole>(this.detach_tblUsers_InRoles));
			this._tblAction_Menus = new EntitySet<tblAction_Menu>(new Action<tblAction_Menu>(this.attach_tblAction_Menus), new Action<tblAction_Menu>(this.detach_tblAction_Menus));
			this._tblAction_Tab = default(EntityRef<tblAction_Tab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					if (this._tblAction_Tab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAction_MenuGroup_tblUsers_InRole", Storage="_tblUsers_InRoles", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<tblUsers_InRole> tblUsers_InRoles
		{
			get
			{
				return this._tblUsers_InRoles;
			}
			set
			{
				this._tblUsers_InRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAction_MenuGroup_tblAction_Menu", Storage="_tblAction_Menus", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<tblAction_Menu> tblAction_Menus
		{
			get
			{
				return this._tblAction_Menus;
			}
			set
			{
				this._tblAction_Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAction_Tab_tblAction_MenuGroup", Storage="_tblAction_Tab", ThisKey="TabID", OtherKey="ID", IsForeignKey=true)]
		public tblAction_Tab tblAction_Tab
		{
			get
			{
				return this._tblAction_Tab.Entity;
			}
			set
			{
				tblAction_Tab previousValue = this._tblAction_Tab.Entity;
				if (((previousValue != value) 
							|| (this._tblAction_Tab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAction_Tab.Entity = null;
						previousValue.tblAction_MenuGroups.Remove(this);
					}
					this._tblAction_Tab.Entity = value;
					if ((value != null))
					{
						value.tblAction_MenuGroups.Add(this);
						this._TabID = value.ID;
					}
					else
					{
						this._TabID = default(int);
					}
					this.SendPropertyChanged("tblAction_Tab");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsers_InRoles(tblUsers_InRole entity)
		{
			this.SendPropertyChanging();
			entity.tblAction_MenuGroup = this;
		}
		
		private void detach_tblUsers_InRoles(tblUsers_InRole entity)
		{
			this.SendPropertyChanging();
			entity.tblAction_MenuGroup = null;
		}
		
		private void attach_tblAction_Menus(tblAction_Menu entity)
		{
			this.SendPropertyChanging();
			entity.tblAction_MenuGroup = this;
		}
		
		private void detach_tblAction_Menus(tblAction_Menu entity)
		{
			this.SendPropertyChanging();
			entity.tblAction_MenuGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAction_Menu")]
	public partial class tblAction_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _GroupID;
		
		private string _Action;
		
		private int _OrderNo;
		
		private EntityRef<tblAction_MenuGroup> _tblAction_MenuGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    #endregion
		
		public tblAction_Menu()
		{
			this._tblAction_MenuGroup = default(EntityRef<tblAction_MenuGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._tblAction_MenuGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAction_MenuGroup_tblAction_Menu", Storage="_tblAction_MenuGroup", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public tblAction_MenuGroup tblAction_MenuGroup
		{
			get
			{
				return this._tblAction_MenuGroup.Entity;
			}
			set
			{
				tblAction_MenuGroup previousValue = this._tblAction_MenuGroup.Entity;
				if (((previousValue != value) 
							|| (this._tblAction_MenuGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAction_MenuGroup.Entity = null;
						previousValue.tblAction_Menus.Remove(this);
					}
					this._tblAction_MenuGroup.Entity = value;
					if ((value != null))
					{
						value.tblAction_Menus.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("tblAction_MenuGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAction_Controls")]
	public partial class tblAction_Control : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private string _CaptionHTML;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCaptionHTMLChanging(string value);
    partial void OnCaptionHTMLChanged();
    #endregion
		
		public tblAction_Control()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaptionHTML", DbType="NVarChar(MAX)")]
		public string CaptionHTML
		{
			get
			{
				return this._CaptionHTML;
			}
			set
			{
				if ((this._CaptionHTML != value))
				{
					this.OnCaptionHTMLChanging(value);
					this.SendPropertyChanging();
					this._CaptionHTML = value;
					this.SendPropertyChanged("CaptionHTML");
					this.OnCaptionHTMLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAction_Tabs")]
	public partial class tblAction_Tab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _RoleID;
		
		private string _Controller;
		
		private int _OrderNo;
		
		private EntitySet<tblUsers_InRole> _tblUsers_InRoles;
		
		private EntitySet<tblAction_MenuGroup> _tblAction_MenuGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnControllerChanging(string value);
    partial void OnControllerChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    #endregion
		
		public tblAction_Tab()
		{
			this._tblUsers_InRoles = new EntitySet<tblUsers_InRole>(new Action<tblUsers_InRole>(this.attach_tblUsers_InRoles), new Action<tblUsers_InRole>(this.detach_tblUsers_InRoles));
			this._tblAction_MenuGroups = new EntitySet<tblAction_MenuGroup>(new Action<tblAction_MenuGroup>(this.attach_tblAction_MenuGroups), new Action<tblAction_MenuGroup>(this.detach_tblAction_MenuGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Controller", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Controller
		{
			get
			{
				return this._Controller;
			}
			set
			{
				if ((this._Controller != value))
				{
					this.OnControllerChanging(value);
					this.SendPropertyChanging();
					this._Controller = value;
					this.SendPropertyChanged("Controller");
					this.OnControllerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAction_Tab_tblUsers_InRole", Storage="_tblUsers_InRoles", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<tblUsers_InRole> tblUsers_InRoles
		{
			get
			{
				return this._tblUsers_InRoles;
			}
			set
			{
				this._tblUsers_InRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAction_Tab_tblAction_MenuGroup", Storage="_tblAction_MenuGroups", ThisKey="ID", OtherKey="TabID")]
		public EntitySet<tblAction_MenuGroup> tblAction_MenuGroups
		{
			get
			{
				return this._tblAction_MenuGroups;
			}
			set
			{
				this._tblAction_MenuGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsers_InRoles(tblUsers_InRole entity)
		{
			this.SendPropertyChanging();
			entity.tblAction_Tab = this;
		}
		
		private void detach_tblUsers_InRoles(tblUsers_InRole entity)
		{
			this.SendPropertyChanging();
			entity.tblAction_Tab = null;
		}
		
		private void attach_tblAction_MenuGroups(tblAction_MenuGroup entity)
		{
			this.SendPropertyChanging();
			entity.tblAction_Tab = this;
		}
		
		private void detach_tblAction_MenuGroups(tblAction_MenuGroup entity)
		{
			this.SendPropertyChanging();
			entity.tblAction_Tab = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblObjects_ID")]
	public partial class tblObjects_ID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _tblName;
		
		private int _tblID;
		
		private System.DateTime _Date;
		
		private EntitySet<tblDocs_UploadedFile> _tblDocs_UploadedFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntblNameChanging(string value);
    partial void OntblNameChanged();
    partial void OntblIDChanging(int value);
    partial void OntblIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public tblObjects_ID()
		{
			this._tblDocs_UploadedFiles = new EntitySet<tblDocs_UploadedFile>(new Action<tblDocs_UploadedFile>(this.attach_tblDocs_UploadedFiles), new Action<tblDocs_UploadedFile>(this.detach_tblDocs_UploadedFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tblName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string tblName
		{
			get
			{
				return this._tblName;
			}
			set
			{
				if ((this._tblName != value))
				{
					this.OntblNameChanging(value);
					this.SendPropertyChanging();
					this._tblName = value;
					this.SendPropertyChanged("tblName");
					this.OntblNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tblID", DbType="Int NOT NULL")]
		public int tblID
		{
			get
			{
				return this._tblID;
			}
			set
			{
				if ((this._tblID != value))
				{
					this.OntblIDChanging(value);
					this.SendPropertyChanging();
					this._tblID = value;
					this.SendPropertyChanged("tblID");
					this.OntblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblObjects_ID_tblDocs_UploadedFile", Storage="_tblDocs_UploadedFiles", ThisKey="ID", OtherKey="ObjectID")]
		public EntitySet<tblDocs_UploadedFile> tblDocs_UploadedFiles
		{
			get
			{
				return this._tblDocs_UploadedFiles;
			}
			set
			{
				this._tblDocs_UploadedFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblDocs_UploadedFiles(tblDocs_UploadedFile entity)
		{
			this.SendPropertyChanging();
			entity.tblObjects_ID = this;
		}
		
		private void detach_tblDocs_UploadedFiles(tblDocs_UploadedFile entity)
		{
			this.SendPropertyChanging();
			entity.tblObjects_ID = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTowns")]
	public partial class tblTown : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblTown()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblClients")]
	public partial class tblClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _Code;
		
		private string _Name;
		
		private string _Description;
		
		private string _Address;
		
		private int _TownID;
		
		private string _Contact;
		
		private string _ContactDetails;
		
		private string _Email;
		
		private string _Notes;
		
		private string _Rec_Bank;
		
		private string _Rec_BankAccount;
		
		private string _Rec_VATCode;
		
		private System.Nullable<System.Guid> _Rid;
		
		private EntitySet<tblContract> _tblContracts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(long value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTownIDChanging(int value);
    partial void OnTownIDChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnContactDetailsChanging(string value);
    partial void OnContactDetailsChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRec_BankChanging(string value);
    partial void OnRec_BankChanged();
    partial void OnRec_BankAccountChanging(string value);
    partial void OnRec_BankAccountChanged();
    partial void OnRec_VATCodeChanging(string value);
    partial void OnRec_VATCodeChanged();
    partial void OnRidChanging(System.Nullable<System.Guid> value);
    partial void OnRidChanged();
    #endregion
		
		public tblClient()
		{
			this._tblContracts = new EntitySet<tblContract>(new Action<tblContract>(this.attach_tblContracts), new Action<tblContract>(this.detach_tblContracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="BigInt NOT NULL")]
		public long Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TownID", DbType="Int NOT NULL")]
		public int TownID
		{
			get
			{
				return this._TownID;
			}
			set
			{
				if ((this._TownID != value))
				{
					this.OnTownIDChanging(value);
					this.SendPropertyChanging();
					this._TownID = value;
					this.SendPropertyChanged("TownID");
					this.OnTownIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDetails", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ContactDetails
		{
			get
			{
				return this._ContactDetails;
			}
			set
			{
				if ((this._ContactDetails != value))
				{
					this.OnContactDetailsChanging(value);
					this.SendPropertyChanging();
					this._ContactDetails = value;
					this.SendPropertyChanged("ContactDetails");
					this.OnContactDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_Bank", DbType="NVarChar(50)")]
		public string Rec_Bank
		{
			get
			{
				return this._Rec_Bank;
			}
			set
			{
				if ((this._Rec_Bank != value))
				{
					this.OnRec_BankChanging(value);
					this.SendPropertyChanging();
					this._Rec_Bank = value;
					this.SendPropertyChanged("Rec_Bank");
					this.OnRec_BankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_BankAccount", DbType="VarChar(30)")]
		public string Rec_BankAccount
		{
			get
			{
				return this._Rec_BankAccount;
			}
			set
			{
				if ((this._Rec_BankAccount != value))
				{
					this.OnRec_BankAccountChanging(value);
					this.SendPropertyChanging();
					this._Rec_BankAccount = value;
					this.SendPropertyChanged("Rec_BankAccount");
					this.OnRec_BankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_VATCode", DbType="VarChar(20)")]
		public string Rec_VATCode
		{
			get
			{
				return this._Rec_VATCode;
			}
			set
			{
				if ((this._Rec_VATCode != value))
				{
					this.OnRec_VATCodeChanging(value);
					this.SendPropertyChanging();
					this._Rec_VATCode = value;
					this.SendPropertyChanged("Rec_VATCode");
					this.OnRec_VATCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Rid
		{
			get
			{
				return this._Rid;
			}
			set
			{
				if ((this._Rid != value))
				{
					this.OnRidChanging(value);
					this.SendPropertyChanging();
					this._Rid = value;
					this.SendPropertyChanged("Rid");
					this.OnRidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblClient_tblContract", Storage="_tblContracts", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<tblContract> tblContracts
		{
			get
			{
				return this._tblContracts;
			}
			set
			{
				this._tblContracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContracts(tblContract entity)
		{
			this.SendPropertyChanging();
			entity.tblClient = this;
		}
		
		private void detach_tblContracts(tblContract entity)
		{
			this.SendPropertyChanging();
			entity.tblClient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContracts_Form")]
	public partial class tblContracts_Form : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<tblContract> _tblContracts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblContracts_Form()
		{
			this._tblContracts = new EntitySet<tblContract>(new Action<tblContract>(this.attach_tblContracts), new Action<tblContract>(this.detach_tblContracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContracts_Form_tblContract", Storage="_tblContracts", ThisKey="ID", OtherKey="FormID")]
		public EntitySet<tblContract> tblContracts
		{
			get
			{
				return this._tblContracts;
			}
			set
			{
				this._tblContracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContracts(tblContract entity)
		{
			this.SendPropertyChanging();
			entity.tblContracts_Form = this;
		}
		
		private void detach_tblContracts(tblContract entity)
		{
			this.SendPropertyChanging();
			entity.tblContracts_Form = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContracts")]
	public partial class tblContract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FormID;
		
		private System.DateTime _Date;
		
		private System.DateTime _DeliveryDate;
		
		private int _ClientID;
		
		private string _ClientNo;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _ValidityDate;
		
		private string _ValidityNote;
		
		private System.Nullable<double> _PriceAtOnce;
		
		private System.Nullable<double> _PricePerMonth;
		
		private int _RespUserID;
		
		private string _Notes;
		
		private System.Nullable<int> _PagesNo;
		
		private int _SubDepID;
		
		private bool _IsOurCustomer;
		
		private bool _IsSigned;
		
		private EntityRef<tblClient> _tblClient;
		
		private EntityRef<tblContracts_Form> _tblContracts_Form;
		
		private EntityRef<tblUser> _tblUser;
		
		private EntityRef<tblUsers_SubDep> _tblUsers_SubDep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFormIDChanging(int value);
    partial void OnFormIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDeliveryDateChanging(System.DateTime value);
    partial void OnDeliveryDateChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnClientNoChanging(string value);
    partial void OnClientNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnValidityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnValidityDateChanged();
    partial void OnValidityNoteChanging(string value);
    partial void OnValidityNoteChanged();
    partial void OnPriceAtOnceChanging(System.Nullable<double> value);
    partial void OnPriceAtOnceChanged();
    partial void OnPricePerMonthChanging(System.Nullable<double> value);
    partial void OnPricePerMonthChanged();
    partial void OnRespUserIDChanging(int value);
    partial void OnRespUserIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPagesNoChanging(System.Nullable<int> value);
    partial void OnPagesNoChanged();
    partial void OnSubDepIDChanging(int value);
    partial void OnSubDepIDChanged();
    partial void OnIsOurCustomerChanging(bool value);
    partial void OnIsOurCustomerChanged();
    partial void OnIsSignedChanging(bool value);
    partial void OnIsSignedChanged();
    #endregion
		
		public tblContract()
		{
			this._tblClient = default(EntityRef<tblClient>);
			this._tblContracts_Form = default(EntityRef<tblContracts_Form>);
			this._tblUser = default(EntityRef<tblUser>);
			this._tblUsers_SubDep = default(EntityRef<tblUsers_SubDep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int NOT NULL")]
		public int FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					if (this._tblContracts_Form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="Date NOT NULL")]
		public System.DateTime DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._tblClient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientNo", DbType="NVarChar(20)")]
		public string ClientNo
		{
			get
			{
				return this._ClientNo;
			}
			set
			{
				if ((this._ClientNo != value))
				{
					this.OnClientNoChanging(value);
					this.SendPropertyChanging();
					this._ClientNo = value;
					this.SendPropertyChanged("ClientNo");
					this.OnClientNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidityDate", DbType="Date")]
		public System.Nullable<System.DateTime> ValidityDate
		{
			get
			{
				return this._ValidityDate;
			}
			set
			{
				if ((this._ValidityDate != value))
				{
					this.OnValidityDateChanging(value);
					this.SendPropertyChanging();
					this._ValidityDate = value;
					this.SendPropertyChanged("ValidityDate");
					this.OnValidityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidityNote", DbType="NVarChar(50)")]
		public string ValidityNote
		{
			get
			{
				return this._ValidityNote;
			}
			set
			{
				if ((this._ValidityNote != value))
				{
					this.OnValidityNoteChanging(value);
					this.SendPropertyChanging();
					this._ValidityNote = value;
					this.SendPropertyChanged("ValidityNote");
					this.OnValidityNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAtOnce", DbType="Float")]
		public System.Nullable<double> PriceAtOnce
		{
			get
			{
				return this._PriceAtOnce;
			}
			set
			{
				if ((this._PriceAtOnce != value))
				{
					this.OnPriceAtOnceChanging(value);
					this.SendPropertyChanging();
					this._PriceAtOnce = value;
					this.SendPropertyChanged("PriceAtOnce");
					this.OnPriceAtOnceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerMonth", DbType="Float")]
		public System.Nullable<double> PricePerMonth
		{
			get
			{
				return this._PricePerMonth;
			}
			set
			{
				if ((this._PricePerMonth != value))
				{
					this.OnPricePerMonthChanging(value);
					this.SendPropertyChanging();
					this._PricePerMonth = value;
					this.SendPropertyChanged("PricePerMonth");
					this.OnPricePerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RespUserID", DbType="Int NOT NULL")]
		public int RespUserID
		{
			get
			{
				return this._RespUserID;
			}
			set
			{
				if ((this._RespUserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRespUserIDChanging(value);
					this.SendPropertyChanging();
					this._RespUserID = value;
					this.SendPropertyChanged("RespUserID");
					this.OnRespUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(100)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagesNo", DbType="Int")]
		public System.Nullable<int> PagesNo
		{
			get
			{
				return this._PagesNo;
			}
			set
			{
				if ((this._PagesNo != value))
				{
					this.OnPagesNoChanging(value);
					this.SendPropertyChanging();
					this._PagesNo = value;
					this.SendPropertyChanged("PagesNo");
					this.OnPagesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepID", DbType="Int NOT NULL")]
		public int SubDepID
		{
			get
			{
				return this._SubDepID;
			}
			set
			{
				if ((this._SubDepID != value))
				{
					if (this._tblUsers_SubDep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubDepIDChanging(value);
					this.SendPropertyChanging();
					this._SubDepID = value;
					this.SendPropertyChanged("SubDepID");
					this.OnSubDepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOurCustomer", DbType="Bit NOT NULL")]
		public bool IsOurCustomer
		{
			get
			{
				return this._IsOurCustomer;
			}
			set
			{
				if ((this._IsOurCustomer != value))
				{
					this.OnIsOurCustomerChanging(value);
					this.SendPropertyChanging();
					this._IsOurCustomer = value;
					this.SendPropertyChanged("IsOurCustomer");
					this.OnIsOurCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSigned", DbType="Bit NOT NULL")]
		public bool IsSigned
		{
			get
			{
				return this._IsSigned;
			}
			set
			{
				if ((this._IsSigned != value))
				{
					this.OnIsSignedChanging(value);
					this.SendPropertyChanging();
					this._IsSigned = value;
					this.SendPropertyChanged("IsSigned");
					this.OnIsSignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblClient_tblContract", Storage="_tblClient", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public tblClient tblClient
		{
			get
			{
				return this._tblClient.Entity;
			}
			set
			{
				tblClient previousValue = this._tblClient.Entity;
				if (((previousValue != value) 
							|| (this._tblClient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblClient.Entity = null;
						previousValue.tblContracts.Remove(this);
					}
					this._tblClient.Entity = value;
					if ((value != null))
					{
						value.tblContracts.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("tblClient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContracts_Form_tblContract", Storage="_tblContracts_Form", ThisKey="FormID", OtherKey="ID", IsForeignKey=true)]
		public tblContracts_Form tblContracts_Form
		{
			get
			{
				return this._tblContracts_Form.Entity;
			}
			set
			{
				tblContracts_Form previousValue = this._tblContracts_Form.Entity;
				if (((previousValue != value) 
							|| (this._tblContracts_Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContracts_Form.Entity = null;
						previousValue.tblContracts.Remove(this);
					}
					this._tblContracts_Form.Entity = value;
					if ((value != null))
					{
						value.tblContracts.Add(this);
						this._FormID = value.ID;
					}
					else
					{
						this._FormID = default(int);
					}
					this.SendPropertyChanged("tblContracts_Form");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblContract", Storage="_tblUser", ThisKey="RespUserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblContracts.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblContracts.Add(this);
						this._RespUserID = value.ID;
					}
					else
					{
						this._RespUserID = default(int);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUsers_SubDep_tblContract", Storage="_tblUsers_SubDep", ThisKey="SubDepID", OtherKey="ID", IsForeignKey=true)]
		public tblUsers_SubDep tblUsers_SubDep
		{
			get
			{
				return this._tblUsers_SubDep.Entity;
			}
			set
			{
				tblUsers_SubDep previousValue = this._tblUsers_SubDep.Entity;
				if (((previousValue != value) 
							|| (this._tblUsers_SubDep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUsers_SubDep.Entity = null;
						previousValue.tblContracts.Remove(this);
					}
					this._tblUsers_SubDep.Entity = value;
					if ((value != null))
					{
						value.tblContracts.Add(this);
						this._SubDepID = value.ID;
					}
					else
					{
						this._SubDepID = default(int);
					}
					this.SendPropertyChanged("tblUsers_SubDep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocs_UploadedFiles")]
	public partial class tblDocs_UploadedFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FileName;
		
		private int _UserID;
		
		private System.DateTime _SaveTime;
		
		private int _ObjectID;
		
		private int _RecordID;
		
		private int _SizeKB;
		
		private string _Description;
		
		private EntityRef<tblObjects_ID> _tblObjects_ID;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSaveTimeChanging(System.DateTime value);
    partial void OnSaveTimeChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnRecordIDChanging(int value);
    partial void OnRecordIDChanged();
    partial void OnSizeKBChanging(int value);
    partial void OnSizeKBChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblDocs_UploadedFile()
		{
			this._tblObjects_ID = default(EntityRef<tblObjects_ID>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveTime", DbType="DateTime NOT NULL")]
		public System.DateTime SaveTime
		{
			get
			{
				return this._SaveTime;
			}
			set
			{
				if ((this._SaveTime != value))
				{
					this.OnSaveTimeChanging(value);
					this.SendPropertyChanging();
					this._SaveTime = value;
					this.SendPropertyChanged("SaveTime");
					this.OnSaveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._tblObjects_ID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="Int NOT NULL")]
		public int RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeKB", DbType="Int NOT NULL")]
		public int SizeKB
		{
			get
			{
				return this._SizeKB;
			}
			set
			{
				if ((this._SizeKB != value))
				{
					this.OnSizeKBChanging(value);
					this.SendPropertyChanging();
					this._SizeKB = value;
					this.SendPropertyChanged("SizeKB");
					this.OnSizeKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblObjects_ID_tblDocs_UploadedFile", Storage="_tblObjects_ID", ThisKey="ObjectID", OtherKey="ID", IsForeignKey=true)]
		public tblObjects_ID tblObjects_ID
		{
			get
			{
				return this._tblObjects_ID.Entity;
			}
			set
			{
				tblObjects_ID previousValue = this._tblObjects_ID.Entity;
				if (((previousValue != value) 
							|| (this._tblObjects_ID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblObjects_ID.Entity = null;
						previousValue.tblDocs_UploadedFiles.Remove(this);
					}
					this._tblObjects_ID.Entity = value;
					if ((value != null))
					{
						value.tblDocs_UploadedFiles.Add(this);
						this._ObjectID = value.ID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("tblObjects_ID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblDocs_UploadedFile", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblDocs_UploadedFiles.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblDocs_UploadedFiles.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class proc_GetContractsResult
	{
		
		private int _ID;
		
		private int _FormID;
		
		private string _Date;
		
		private string _DeliveryDate;
		
		private int _ClientID;
		
		private string _ClientName;
		
		private string _Description;
		
		private string _ValidityDate;
		
		private string _ValidityNote;
		
		private int _DocsNo;
		
		public proc_GetContractsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int NOT NULL")]
		public int FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this._FormID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Char(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="Char(10)")]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this._DeliveryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(60)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidityDate", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ValidityDate
		{
			get
			{
				return this._ValidityDate;
			}
			set
			{
				if ((this._ValidityDate != value))
				{
					this._ValidityDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidityNote", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ValidityNote
		{
			get
			{
				return this._ValidityNote;
			}
			set
			{
				if ((this._ValidityNote != value))
				{
					this._ValidityNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocsNo", DbType="Int NOT NULL")]
		public int DocsNo
		{
			get
			{
				return this._DocsNo;
			}
			set
			{
				if ((this._DocsNo != value))
				{
					this._DocsNo = value;
				}
			}
		}
	}
	
	public partial class proc_GetTblDocsResult
	{
		
		private int _ID;
		
		private int _UserID;
		
		private string _Date;
		
		private int _SizeKB;
		
		private string _FileName;
		
		private int _RecordID;
		
		private string _Description;
		
		public proc_GetTblDocsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(16)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeKB", DbType="Int NOT NULL")]
		public int SizeKB
		{
			get
			{
				return this._SizeKB;
			}
			set
			{
				if ((this._SizeKB != value))
				{
					this._SizeKB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="Int NOT NULL")]
		public int RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this._RecordID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
